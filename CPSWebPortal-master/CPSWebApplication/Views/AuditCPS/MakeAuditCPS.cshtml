@model CPSWebApplication.Models.ViewModel.DesignCPSViewModel

@{
    ViewBag.Title = "MakeAuditCPS";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h3>Audit CPS</h3>
<link href="@Url.Content("~/Content/themes/base/minified/jquery-ui.min.css")" rel="stylesheet" />
<script src="~/Scripts/jquery-3.1.1.min.js"></script>
<script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
<script src="http://ajax.googleapis.com/ajax/libs/jqueryui/1.8/jquery-ui.min.js"></script>

    @if (TempData["Message"] != null)
    {
    <div div class="alert alert-dismissable alert-success">@TempData["Message"]</div>}

    @using (Html.BeginForm("SaveChangesOnAuditCPS", "AuditCPS"))
    {
        <table id="cphMainContent_dgvUsers" class="table table-hover table-striped"
               cellspacing="0" style="border-collapse:collapse;">
            <tbody>
                <tr>
                    <td>
                        @Html.LabelFor(model => model.academicYear, new { @class = "control-label col-md-20" })
                    </td>
                    <td>
                        <div class="col-md-12">
                            @Html.TextBoxFor(model => model.academicYear, new { @class = "form-control", @readonly = "readonly" })
                        </div>
                    </td>
                    <td>
                        @Html.LabelFor(model => model.majorName, new { @class = "control-label col-md-20" })
                    </td>
                    <td>
                        <div class="col-md-12">
                            @Html.TextBoxFor(model => model.majorName, new { @class = "form-control", @readonly = "readonly" })
                        </div>
                    </td>
                    <td></td>
                    <td></td>
                </tr>
                <tr>
                    <td>
                        @Html.LabelFor(model => model.lastName, new { @class = "control-label col-md-20" })
                    </td>
                    <td>
                        <div class="col-md-12">
                            @Html.TextBoxFor(model => model.lastName, new { @class = "form-control", @readonly = "readonly" })
                        </div>
                    </td>
                    <td>
                        @Html.LabelFor(model => model.firstName, new { @class = "control-label col-md-20" })
                    </td>
                    <td>
                        <div class="col-md-12">
                            @Html.TextBoxFor(model => model.firstName, new { @class = "form-control", @readonly = "readonly" })
                        </div>
                    </td>
                    <td>
                        @Html.LabelFor(model => model.searchId, new { @class = "control-label col-md-20" })
                    </td>
                    <td>
                        <div class="col-md-12">
                            @Html.TextBoxFor(model => model.searchId, new { @class = "form-control", @readonly = "readonly" })
                        </div>
                    </td>
                </tr>
            </tbody>
        </table>
        <div class="form-group" style="font-family:'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;">
            
            <table id="cphMainContent_dgvUsers" class="table table-hover table-striped"
                   cellspacing="0" style="border-collapse:collapse;">
                <tbody>
                    <tr><th class="h4">Foundation Courses:</th></tr>
                    <tr>
                        <th scope="col">Course</th>
                        <th scope="col">Course Name</th>
                        <th scope="col">Credits</th>
                        <th scope="col">Enrolling Semester</th>
                        <th scope="col">Grade</th>
                    </tr>
                    @if (Model.FoundationClassesList.Count > 0)
                {
                    for (int i = 0; i < Model.FoundationClassesList.Count(); i++)
                    {
                <tr class="cursor-pointer">
                    <td>@Model.FoundationClassesList[i].CourseShortName</td>
                    <td>@Model.FoundationClassesList[i].CourseFullName</td>
                    <td>@Model.FoundationClassesList[i].CreditHrs</td>
                    <td>@Html.DropDownListFor(m => m.FoundationClassesList[i].EnrolledSemester, new SelectList(Model.CourseSemesterList, Model.FoundationClassesList[i].EnrolledSemester), new { @class = "form-control" })</td>
                    <td>@Html.DropDownListFor(m => m.FoundationClassesList[i].GradesRecieved, new SelectList(Model.CourseGradeList, Model.FoundationClassesList[i].GradesRecieved), new { @class = "form-control" })</td>
                </tr>
                    }
                }
                    <tr><th class="h4">Core Courses:</th></tr>
                    @for (int i = 0; i < Model.CoreClassesList.Count(); i++)
                    {
                        <tr class="cursor-pointer">
                            <td>@Model.CoreClassesList[i].CourseShortName </td>
                            <td>@Model.CoreClassesList[i].CourseFullName</td>
                            <td>@Model.CoreClassesList[i].CreditHrs</td>
                            <td>@Html.DropDownListFor(m => m.CoreClassesList[i].EnrolledSemester, new SelectList(Model.CourseSemesterList, Model.CoreClassesList[i].EnrolledSemester), new { @class = "form-control" })</td>
                            <td>@Html.DropDownListFor(m => m.CoreClassesList[i].GradesRecieved, new SelectList(Model.CourseGradeList, Model.CoreClassesList[i].GradesRecieved), new { @class = "form-control" })</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        


        <div style="font-family:'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;">
            <h4>Elective Courses:</h4>
            <div class="form-group" style="font-family:'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;">
                <table>
                    <tbody>
                        <tr>
                            <td>
                                @Html.LabelFor(model => model.programCompletionOption, new { @class = "control-label col-md-20" })  <text>&nbsp;&nbsp;</text>
                            </td>
                            <td>
                                @Html.RadioButtonFor(s => s.programCompletionOption, "Capstone", new { onCLick = "ShowOption(this)" })@Model.ProgramCompletionOptionList[0] &nbsp;
                            </td>
                            <td>
                                @Html.RadioButtonFor(s => s.programCompletionOption, "Thesis", new { onCLick = "ShowOption(this)" })@Model.ProgramCompletionOptionList[1] &nbsp;
                            </td>
                            <td>
                                @Html.RadioButtonFor(s => s.programCompletionOption, "Capstone With Specialization", new { onCLick = "ShowOption(this)" })@Model.ProgramCompletionOptionList[2] &nbsp;
                            </td>
                            <td>
                                @Html.RadioButtonFor(s => s.programCompletionOption, "Thesis With Specialization", new { onCLick = "ShowOption(this)" })@Model.ProgramCompletionOptionList[3] &nbsp;
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
        <!--<div id="SpecializationCheck">@Html.LabelFor(model => model.SpecializationSelected, new { @class = "control-label col-md-20" })
        @Html.CheckBoxFor(s => s.SpecializationSelected, new { @id= "checkSpecial" })</div>-->
        <div id="drpdwnSplOptions">
            @Html.LabelFor(model => model.SpecializationType)&nbsp;@Html.DropDownListFor(m => m.SpecializationType, new SelectList(Model.ListSpecializationOption))
            <br />
        </div>
        <script type="text/javascript">
            $('#Capston').hide();
            $('#Thesis').hide();

            $('#drpdwnSplOptions').hide();
            $('#CapstonNormal').hide();
            $('#CapstonSpecial').hide();
            $('#ThesisNormal').hide();
            $('#ThesisSpecial').hide();

            function ShowOption(radio) {
                var setdRad = radio.value;

                HideAll();
                if (setdRad == "Capstone") {
                    $('#CapstonNormal').show();
                    $('#CapstonSpecial').hide();

                    $('#Capston').show();
                    $('#drpdwnSplOptions').hide();
                }
                else if (setdRad == "Thesis") {
                    $('#ThesisNormal').show();
                    $('#ThesisSpecial').hide();

                    $('#Thesis').show();
                    $('#drpdwnSplOptions').hide();
                } else if (setdRad == "Capstone With Specialization") {
                    $('#CapstonNormal').hide();
                    $('#CapstonSpecial').show();

                    $('#Capston').show();
                    $('#drpdwnSplOptions').show();
                } else if (setdRad == "Thesis With Specialization") {
                    $('#ThesisNormal').hide();
                    $('#ThesisSpecial').show();

                    $('#Thesis').show();
                    $('#drpdwnSplOptions').show();
                }
            }

            function HideAll() {
                $('#Capston').hide();
                $('#Thesis').hide();

                $('#SpecilizationCheck').hide();
                $('#drpdwnSplOptions').hide();

                $('#CapstonNormal').hide();
                $('#CapstonSpecial').hide();
                $('#ThesisNormal').hide();
                $('#ThesisSpecial').hide();
            }
        </script>

            <script language="javascript" type="text/javascript">
                function FillWholeCourseList(subRub) {
                    var subRub = subRub.value;
                    var procemessage = "<option value='0'> Please wait...</option>";
                    $("#courseWholeNameList").html(procemessage).show();
                    var url = "/DraftCPS/GetLoadCourseBySubjectRubric/";

                    $.ajax({
                        url: url,
                        data: { subRub: subRub },
                        cache: false,
                        type: "POST",
                        success: function (data) {
                            var markup = "<option value='0'>Select Subject</option>";
                            for (var x = 0; x < data.length; x++) {
                                markup += "<option value=" + data[x].Value + ">" + data[x].Text + "</option>";
                            }
                            $("#courseWholeNameList").html(markup).show();
                        },
                        error: function (reponse) {
                            alert("error : " + reponse);
                        }
                    });

                }
            </script>

            <script type="text/javascript">
                $(Document).ready(function () {
                    $('.selectpicker').selectpicker({
                        liveSearch: true,
                        showSubtext: true
                    });

                });
            </script>

            <div id="Capston" style="display: none;">
                <div id="CapstonNormal" style="display: none;">
                    <table class="table table-hover table-striped" cellspacing="0" style="border-collapse:collapse;">
                        <tbody>
                            <tr>
                                <th scope="col">Course Name</th>
                                <th scope="col">Course Subject and Level</th>
                                <th scope="col">Credits</th>
                                <th scope="col">Enrolling Semester</th>
                                <th scope="col">Grade</th>
                            </tr>
                            @for (int i = 0; i < Model.countElectivesCapston; i++)
                            {
                                <tr class="cursor-pointer">
                                    @if (Model.ClassesForCapstonNormal.Count > 0)
                                    {
                                        if (Model.CapstonElectiveClassesList != null)
                                        {
                                            <td>@Html.DropDownListFor(m => m.CapstonElectiveClassesList[i].CourseWholeName, new SelectList(Model.ClassesForCapstonNormal[i].classes, Model.CapstonElectiveClassesList[i].CourseWholeName), new { @class = "form-control selectpicker", @id = "courseWholeNameList", @Value = Model.ElectiveWholeName, data_show_subtext = "true", data_live_search = "true" })</td>
                                        }
                                        else
                                        {
                                            <td>@Html.DropDownListFor(m => m.CapstonElectiveClassesList[i].CourseWholeName, new SelectList(Model.ClassesForCapstonNormal[i].classes), new { @class = "form-control selectpicker", @id = "courseWholeNameList", @Value = Model.ElectiveWholeName, data_show_subtext = "true", data_live_search = "true" })</td>
                                        }
                                    }
                                    <td>@Model.ClassesForCapstonNormal[i].rubric</td>
                                    <td>@Model.ElectiveCreditHrs</td>
                                    @if (Model.CapstonElectiveClassesList != null)
                                    {
                                        <td>@Html.DropDownListFor(m => m.CapstonElectiveClassesList[i].EnrolledSemester, new SelectList(Model.CourseSemesterList, Model.CapstonElectiveClassesList[i].EnrolledSemester), new { @class = "form-control" })</td>
                                    }
                                    else
                                    {
                                        <td>@Html.DropDownListFor(m => m.CapstonElectiveClassesList[i].EnrolledSemester, new SelectList(Model.CourseSemesterList), new { @class = "form-control" })</td>
                                    }
                                    @if (Model.CapstonElectiveClassesList != null)
                                    {
                                        <td>@Html.DropDownListFor(m => m.CapstonElectiveClassesList[i].GradesRecieved, new SelectList(Model.CourseGradeList, Model.CapstonElectiveClassesList[i].GradesRecieved), new { @class = "form-control" })</td>
                                    }
                                    else
                                    {
                                        <td>@Html.DropDownListFor(m => m.CapstonElectiveClassesList[i].GradesRecieved, new SelectList(Model.CourseGradeList), new { @class = "form-control" })</td>
                                    }
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                <div id="CapstonSpecial" style="display: none;">
                    <table class="table table-hover table-striped" cellspacing="0" style="border-collapse:collapse;">
                        <tbody>
                            <tr>
                                <th scope="col">Course Name</th>
                                <th scope="col">Course Subject and Level</th>
                                <th scope="col">Credits</th>
                                <th scope="col">Enrolling Semester</th>
                                <th scope="col">Grade</th>
                            </tr>
                            @for (int i = 0; i < Model.countElectivesCapston; i++)
                            {
                                <tr class="cursor-pointer">
                                    @if (Model.ClassesForCapstonSpecial.Count > 0)
                                    {
                                        if (Model.CapstonElectiveSpecialClassesList != null)
                                        {
                                            <td>@Html.DropDownListFor(m => m.CapstonElectiveSpecialClassesList[i].CourseWholeName, new SelectList(Model.ClassesForCapstonSpecial[i].classes, Model.CapstonElectiveSpecialClassesList[i].CourseWholeName), new { @class = "form-control selectpicker", @id = "courseWholeNameList", @Value = Model.ElectiveWholeName, data_show_subtext = "true", data_live_search = "true" })</td>
                                        }
                                        else
                                        {
                                            <td>@Html.DropDownListFor(m => m.CapstonElectiveSpecialClassesList[i].CourseWholeName, new SelectList(Model.ClassesForCapstonSpecial[i].classes), new { @class = "form-control selectpicker", @id = "courseWholeNameList", @Value = Model.ElectiveWholeName, data_show_subtext = "true", data_live_search = "true" })</td>
                                        }
                                    }
                                    <td>@Model.ClassesForCapstonSpecial[i].rubric</td>
                                    <td>@Model.ElectiveCreditHrs</td>
                                    @if (Model.CapstonElectiveSpecialClassesList != null)
                                    {
                                        <td>@Html.DropDownListFor(m => m.CapstonElectiveSpecialClassesList[i].EnrolledSemester, new SelectList(Model.CourseSemesterList, Model.CapstonElectiveSpecialClassesList[i].EnrolledSemester), new { @class = "form-control" })</td>
                                    }
                                    else
                                    {
                                        <td>@Html.DropDownListFor(m => m.CapstonElectiveSpecialClassesList[i].EnrolledSemester, new SelectList(Model.CourseSemesterList), new { @class = "form-control" })</td>
                                    }

                                    @if (Model.CapstonElectiveSpecialClassesList != null)
                                    {
                                        <td>@Html.DropDownListFor(m => m.CapstonElectiveSpecialClassesList[i].GradesRecieved, new SelectList(Model.CourseGradeList, Model.CapstonElectiveSpecialClassesList[i].GradesRecieved), new { @class = "form-control" })</td>
                                    }
                                    else
                                    {
                                        <td>@Html.DropDownListFor(m => m.CapstonElectiveSpecialClassesList[i].GradesRecieved, new SelectList(Model.CourseGradeList), new { @class = "form-control" })</td>
                                    }

                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <div>
                    <!-- Capston -->
                    <table class="table table-hover table-striped" cellspacing="0" style="border-collapse:collapse;">
                        <tbody>
                            <tr>
                                <th scope="col"></th>
                                <th scope="col"></th>
                                <th scope="col"></th>
                                <th scope="col"></th>
                                <th scope="col"></th>
                            </tr>
                            <tr>
                                <td>@Model.CapstonCourse.CourseShortName</td>
                                <td>@Model.CapstonCourse.CourseFullName</td>
                                <td>@Model.CapstonCourse.CreditHrs</td>
                                <td>@Html.DropDownListFor(m => m.CapstonCourse.EnrolledSemester, new SelectList(Model.CourseSemesterList), new { @class = "form-control" })</td>
                                <td>@Html.DropDownListFor(m => m.CapstonCourse.GradesRecieved, new SelectList(Model.CourseGradeList, Model.CapstonCourse.GradesRecieved), new { @class = "form-control" })</td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>

            <div id="Thesis" style="display: none;">
                <div id="ThesisNormal" style="display: none;">
                    <table class="table table-hover table-striped" cellspacing="0" style="border-collapse:collapse;">
                        <tbody>
                            <tr>
                                <th scope="col">Course Name</th>
                                <th scope="col">CourseSubject And Level</th>
                                <th scope="col">Credits</th>
                                <th scope="col">EnrollingSemester</th>
                                <th scope="col">Grade</th>
                            </tr>
                            @for (int i = 0; i < Model.countElectivesThesis; i++)
                            {
                                <tr class="cursor-pointer">
                                    @if (Model.ClassesForThesisNormal.Count > 0)
                                    {
                                        if (Model.ThesisElectiveClassesList != null)
                                        {
                                            <td>@Html.DropDownListFor(m => m.ThesisElectiveClassesList[i].CourseWholeName, new SelectList(Model.ClassesForThesisNormal[i].classes, Model.ThesisElectiveClassesList[i].CourseWholeName), new { @class = "form-control selectpicker", @id = "courseWholeNameList", @Value = Model.ElectiveWholeName, data_show_subtext = "true", data_live_search = "true" })</td>
                                        }
                                        else
                                        {
                                            <td>@Html.DropDownListFor(m => m.ThesisElectiveClassesList[i].CourseWholeName, new SelectList(Model.ClassesForThesisNormal[i].classes), new { @class = "form-control selectpicker", @id = "courseWholeNameList", @Value = Model.ElectiveWholeName, data_show_subtext = "true", data_live_search = "true" })</td>
                                        }

                                    }
                                    <td>@Model.ClassesForThesisNormal[i].rubric</td>
                                    <td>@Model.ElectiveCreditHrs</td>
                                    @if (Model.ThesisElectiveClassesList != null)
                                    {
                                        <td>@Html.DropDownListFor(m => m.ThesisElectiveClassesList[i].EnrolledSemester, new SelectList(Model.CourseSemesterList, Model.ThesisElectiveClassesList[i].EnrolledSemester), new { @class = "form-control" })</td>
                                    }
                                    else
                                    {
                                        <td>@Html.DropDownListFor(m => m.ThesisElectiveClassesList[i].EnrolledSemester, new SelectList(Model.CourseSemesterList), new { @class = "form-control" })</td>
                                    }
                                    @if (Model.ThesisElectiveClassesList != null)
                                    {
                                        <td>@Html.DropDownListFor(m => m.ThesisElectiveClassesList[i].GradesRecieved, new SelectList(Model.CourseGradeList, Model.ThesisElectiveClassesList[i].GradesRecieved), new { @class = "form-control" })</td>
                                    }
                                    else
                                    {
                                        <td>@Html.DropDownListFor(m => m.ThesisElectiveClassesList[i].GradesRecieved, new SelectList(Model.CourseGradeList), new { @class = "form-control" })</td>
                                    }

                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                <div id="ThesisSpecial" style="display: none;">
                    <table class="table table-hover table-striped" cellspacing="0" style="border-collapse:collapse;">
                        <tbody>
                            <tr>
                                <th scope="col">Course Name</th>
                                <th scope="col">CourseSubject And Level</th>
                                <th scope="col">Credits</th>
                                <th scope="col">EnrollingSemester</th>
                                <th scope="col">Grade</th>
                            </tr>
                            @for (int i = 0; i < Model.countElectivesThesis; i++)
                            {
                                <tr class="cursor-pointer">
                                    @if (Model.ClassesForThesisSpecial.Count > 0)
                                    {
                                        if (Model.ThesisElectiveSpecialClassesList != null)
                                        {
                                            <td>@Html.DropDownListFor(m => m.ThesisElectiveSpecialClassesList[i].CourseWholeName, new SelectList(Model.ClassesForThesisSpecial[i].classes, Model.ThesisElectiveSpecialClassesList[i].CourseWholeName), new { @class = "form-control selectpicker", @id = "courseWholeNameList", @Value = Model.ElectiveWholeName, data_show_subtext = "true", data_live_search = "true" })</td>
                                        }
                                        else
                                        {
                                            <td>@Html.DropDownListFor(m => m.ThesisElectiveSpecialClassesList[i].CourseWholeName, new SelectList(Model.ClassesForThesisSpecial[i].classes), new { @class = "form-control selectpicker", @id = "courseWholeNameList", @Value = Model.ElectiveWholeName, data_show_subtext = "true", data_live_search = "true" })</td>
                                        }

                                    }
                                    <td>@Model.ClassesForThesisSpecial[i].rubric</td>
                                    <td>@Model.ElectiveCreditHrs</td>
                                    @if (Model.ThesisElectiveSpecialClassesList != null)
                                    {
                                        <td>@Html.DropDownListFor(m => m.ThesisElectiveSpecialClassesList[i].EnrolledSemester, new SelectList(Model.CourseSemesterList, Model.ThesisElectiveSpecialClassesList[i].EnrolledSemester), new { @class = "form-control" })</td>
                                    }
                                    else
                                    {
                                        <td>@Html.DropDownListFor(m => m.ThesisElectiveSpecialClassesList[i].EnrolledSemester, new SelectList(Model.CourseSemesterList), new { @class = "form-control" })</td>
                                    }
                                    @if (Model.ThesisElectiveSpecialClassesList != null)
                                    {
                                        <td>@Html.DropDownListFor(m => m.ThesisElectiveSpecialClassesList[i].GradesRecieved, new SelectList(Model.CourseGradeList, Model.ThesisElectiveSpecialClassesList[i].GradesRecieved), new { @class = "form-control" })</td>
                                    }
                                    else
                                    {
                                        <td>@Html.DropDownListFor(m => m.ThesisElectiveSpecialClassesList[i].GradesRecieved, new SelectList(Model.CourseGradeList), new { @class = "form-control" })</td>
                                    }
                                </tr>
                            }
                        </tbody>
                    </table>

                </div>

                <div>
                    <!-- Thesis -->
                    <table class="table table-hover table-striped" cellspacing="0" style="border-collapse:collapse;">
                        <tbody>
                            <tr>
                                <th scope="col"></th>
                                <th scope="col"></th>
                                <th scope="col"></th>
                                <th scope="col"></th>
                                <th scope="col"></th>
                            </tr>
                            @for (int i = 0; i < Model.ThesisCourse.Count; i++)
                            {
                                <tr>
                                    <td>@Model.ThesisCourse[i].CourseShortName</td>
                                    <td>@Model.ThesisCourse[i].CourseFullName</td>
                                    <td>@Model.ThesisCourse[i].CreditHrs</td>
                                    <td>@Html.DropDownListFor(m => m.ThesisCourse[i].EnrolledSemester, new SelectList(Model.CourseSemesterList), new { @class = "form-control" })</td>
                                    <td>@Html.DropDownListFor(m => m.ThesisCourse[i].GradesRecieved, new SelectList(Model.CourseGradeList, Model.ThesisCourse[i].GradesRecieved), new { @class = "form-control" })</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>          
                <br/>
                <table>
                    <tbody>
                        <tr>
                            <td style="padding-bottom:2em; padding-right:2em">
                                @Html.LabelFor(model => model.assignedFaculty, new { @class = "control-label col-md-20" })
                            </td>
                            <td style="padding-bottom:2em; padding-right:2em">
                                @Html.TextBoxFor(model => model.assignedFaculty, new { @readonly = "readonly" })
                            </td>
                        </tr>
                        <tr>&nbsp;</tr>
                        <tr>
                            <td style="padding-bottom:2em; padding-right:2em">
                                @Html.LabelFor(model => model.SignatureAcademicAdvisor, new { @class = "control-label col-md-20" })
                            </td>
                            <td style="padding-bottom:2em; padding-right:2em">
                                @Html.EditorFor(model => model.SignatureAcademicAdvisor, new { htmlAttributes = new { @class = "form-control" } })
                            </td>
                            <td style="padding-bottom:2em; padding-right:2em">
                                @Html.LabelFor(model => model.SignedDate, new { @class = "control-label col-md-20" })
                            </td>
                            <td style="padding-bottom:2em; padding-right:2em">
                                @Html.EditorFor(model => model.SignedDate, new { htmlAttributes = new { @class = "form-control" } })
                            </td>
                        </tr>
                    </tbody>
                </table>
               
                <br />
                <button name="action" value="back" type="submit" class="btn btn-default hidden-print" onclick="window.location = ('@Url.Action("","")')">Back To Home</button>
                <button name="action" value="saveDraft" type="submit" formmethod="post" class="btn btn-success hidden-print" onclick="window.location = ('@Url.Action("","")')">Save</button>
                <button name="action" value="sendToModify" type="submit" formmethod="post" class="btn btn-success hidden-print" onclick="window.location = ('@Url.Action("","")')">Send to Modify</button>
                <button name="action" value="saveToFinal" type="submit" formmethod="post" class="btn btn-success hidden-print" onclick="window.location = ('@Url.Action("","")')">Submit to Finalize</button>
               

                <a href="javascript:window.print()" class="btn btn-info hidden-print">
                    <span class="glyphicon glyphicon-print"></span> Print
                </a>
    }



